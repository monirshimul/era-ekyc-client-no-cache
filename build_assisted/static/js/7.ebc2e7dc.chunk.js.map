{"version":3,"sources":["component/E-KYC/User/Password/ForgetPass.js","component/E-KYC/Url/IpAdd.js","component/E-KYC/Url/ApiList.js","component/Utils/notificationTime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","component/Login/image/wave2.png"],"names":["ForgetPass","state","newPass","confirmPass","mobileToken","props","location","onChange","e","setState","target","name","value","onSubmit","a","preventDefault","regex","RegExp","NotificationManager","warning","largeTime","length","exec","passObj","newPassword","config","headers","axios","post","setPassword","setPass","console","log","data","message","statusCode","success","history","push","response","error","request","toString","className","src","bg","alt","id","this","type","placeholder","autoComplete","Component","withRouter","hostIp","nidValidationRPA","faceValidate","fingerValidate","nidOcr","getAppSetting","initAppSetting","updateAppSetting","allDataCount","ekycPie","lineChart","lineChartVerify","zoneCodeConversion","getRoleWithFilter","createUserWithRole","getUserWithStatus","userApprovalAPI","getAllUser","searchUser","getupdateUser","userUpdate","userDeleteAPI","loginAPI","twoFALogin","changePassword","getProfile","imageUpdate","dataUpdate","checkUserId","checkUserMobile","checkUserEmail","logoutUser","confirmApi","ekycWithFilter","ekycFullProfile","ekycForUser","simplifiedJointAPI","simplifiedJointAddAPI","simplifiedJointConfirmAPI","regularSingleApi","createProduct","deleteProduct","getProduct","getProductMultiFilter","createTPAPI","getTPAPI","updateTPAPI","deleteTPAPI","getEkycType","profileDownload","opFileDownload","regPdfDownload","createRole","getRoleWithStatus","roleApproval","updateRole","profession","division","district","union","upozila","simConvReg","simRegApi","mobileVerification","mobileCodeVerification","absAccountCheck","forgetPassUserId","forgetPasswordVerifyCode","pendingAccount","discardAccount","reopenAccount","channelAccountSearch","accessLog","textMatch","depoApi","NidFingerVerification","NidVerifyList","nidFaceCompareNew","translate","getDivNative","getDistNative","getUpaNative","getUniNative","mediumTime","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","module","exports"],"mappings":"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","file":"static/js/7.ebc2e7dc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//import { connect } from 'react-redux';\r\n\r\nimport '../../../Login/Login.css';\r\nimport bg from '../../../Login/image/wave2.png'\r\nimport axios from 'axios';\r\nimport { FaLock} from \"react-icons/fa\";\r\nimport { withRouter} from 'react-router-dom';\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { largeTime } from './../../../Utils/notificationTime';\r\nimport { setPassword } from '../../Url/ApiList';\r\n\r\nclass ForgetPass extends Component {\r\n    state = {\r\n        newPass: '',\r\n        confirmPass: '',\r\n        mobileToken: this.props.location.state\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { newPass, confirmPass } = this.state;\r\n\r\n        let regex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})');\r\n\r\n        if (newPass === '') {\r\n            let msg2 = \"Please Provide New Password\";\r\n            NotificationManager.warning(msg2, \"Click To Remove\", largeTime);\r\n            return;\r\n        }\r\n\r\n        if (newPass.length < 8) {\r\n            let passlenMessage = \"New Password length minimum 8 characters\";\r\n            NotificationManager.warning(passlenMessage, \"Click To Remove\", largeTime);\r\n            return;\r\n        }\r\n\r\n        if (regex.exec(newPass) === null) {\r\n            let passRegMessage = \"New Password must have capital letter, special character and digits\";\r\n            NotificationManager.warning(passRegMessage, \"Click To Remove\", largeTime);\r\n            return;\r\n        }\r\n\r\n        if (confirmPass === \"\") {\r\n            NotificationManager.warning('Confirm Password field is empty!! Please Enter Confirm Password Field', \"Click To Remove\", largeTime);\r\n            return;\r\n        }\r\n\r\n        if (confirmPass !== newPass) {\r\n            NotificationManager.warning(\"New Password and Confirm Password are not Same\", \"Click To Remove\", largeTime);\r\n            return;\r\n        }\r\n\r\n        const passObj = {\r\n            newPassword: newPass\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n                'x-auth-passcode': '$Er@InfoTech#LtdCMMI3',\r\n                'x-mobile-token': this.state.mobileToken\r\n            }\r\n        };\r\n\r\n        try {\r\n            let setPass = await axios.post(setPassword, passObj, config);\r\n            console.log(\"response\", setPass.data.message);\r\n            if (setPass.data.statusCode === 200) {\r\n                NotificationManager.success(\"Password Change Successfull\", \"Success\", 10000);\r\n                this.props.history.push('/');\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                let message = error.response.data.message\r\n                //console.log(\"Error\",error.response)\r\n                NotificationManager.error(message, \"Error\", 5000);\r\n            } else if (error.request) {\r\n                console.log(\"Error Connecting...\", error.request)\r\n                NotificationManager.error(\"Error Connecting...\", \"Error\", 5000);\r\n            } else if (error) {\r\n                NotificationManager.error(error.toString(), \"Error\", 5000);\r\n            }\r\n        }\r\n\r\n\r\n        // alert(\"Password Change Completed\");\r\n        // this.props.history.push('/');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <img className=\"wave\" src={bg} alt=\"\" />\r\n                <div id=\"container\">\r\n\r\n                    <div className=\"login-content\">\r\n                        <form id=\"loginForm\" onSubmit={this.onSubmit}>\r\n\r\n                            {/* <img id=\"proImg\" src={logo} /> */}\r\n                            <div className=\"loginDivBg pt-2\"><h1>Forget Password</h1></div>\r\n                            <h2 className=\"heading mb-5\">Set Password</h2>\r\n\r\n                            <div className=\"field mb-3\">\r\n                                <input name=\"newPass\" value={this.state.newPass} onChange={this.onChange} type=\"password\" id=\"inputUser\" placeholder=\"New Password\" autoComplete=\"off\" />\r\n                                <span>\r\n                                    <FaLock />\r\n                                </span>\r\n\r\n                                <label>New Password</label>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <input name=\"confirmPass\" value={this.state.confirmPass} onChange={this.onChange} type=\"password\" id=\"inputPass\" placeholder=\"Confirm Password\" />\r\n                                <span>\r\n                                    <FaLock />\r\n                                </span>\r\n                                <label>Confirm Password</label>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <input type=\"submit\" className=\"neoBtn\" value=\"Submit\" />\r\n                            {/* <button type=\"submit\" className=\"neoBtn\">Login</button> */}\r\n                            {/* <Link to=\"/dashboard\" id=\"btn\" >Login</Link> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ForgetPass);\r\n","export const hostIp = `http://103.17.69.111/api/`;\r\n// export const hostIp = `http://10.88.7.12:3001`;\r\n// export const hostIp = `http://127.0.0.1:3001/`;\r\n// export const hostIp = `http://10.88.1.169:3001/`;\r\n//  export const hostIp = `https://agent1.bankasia-bd.com:3000/api/`;\r\n","import { hostIp } from './IpAdd';\r\n\r\n// RPA\r\nexport const nidValidationRPA = hostIp + `ai/nid-rpa`;\r\n// export const nidValidationRPA = hostIp + `dummy/nid-rpa`;\r\n\r\n// face Verification\r\n\r\nexport const faceValidate = hostIp + `ai/face-verification`;\r\n// export const faceValidate = hostIp + `dummy/face-verification`;\r\n\r\n// Finger Verification\r\n\r\nexport const fingerValidate = hostIp + `integration/fingerprint-verification`;\r\n// export const fingerValidate = hostIp + `dummy/fingerprint-verification`;\r\n\r\n\r\n// OCR\r\nexport const nidOcr = hostIp + `ai/nid-ocr`;\r\n\r\n// App Setting\r\n\r\nexport const getAppSetting = hostIp + `setting/get`;\r\nexport const initAppSetting = hostIp + `setting/init`;\r\nexport const updateAppSetting = hostIp + `setting/`;\r\n\r\n// Chart Data\r\n\r\nexport const allDataCount = hostIp + `report/count`;\r\nexport const ekycPie = hostIp + `report/ekyc/count`;\r\nexport const lineChart = hostIp + `report/ekyc/count/by/month`;\r\nexport const lineChartVerify = hostIp + `report/verification/count/by/day`;\r\n\r\n// zonecode-conversion\r\nexport const zoneCodeConversion = hostIp + `integration/zonecode-conversion`;\r\n\r\n//User Management\r\nexport const getRoleWithFilter = hostIp + `role/get/`;\r\nexport const createUserWithRole = hostIp + `user`;\r\nexport const getUserWithStatus = hostIp + `user/get/`;\r\nexport const userApprovalAPI = hostIp + `user/status`;\r\nexport const getAllUser = hostIp + `user/get/`;\r\nexport const searchUser = hostIp + `user/get/`;\r\nexport const getupdateUser = hostIp + `user/get/`;\r\nexport const userUpdate = hostIp + `user/`;\r\nexport const userDeleteAPI = hostIp + `user/status`;\r\n//Login\r\nexport const loginAPI = hostIp + `user/login`;\r\n\r\n//2FA Login\r\nexport const twoFALogin = hostIp + `user/2fa`;\r\n\r\n//Profile Management\r\nexport const changePassword = hostIp + `profile/change-password`;\r\nexport const getProfile = hostIp + `profile/`;\r\nexport const imageUpdate = hostIp + `profile/picture`;\r\nexport const dataUpdate = hostIp + `profile/`;\r\n\r\n\r\n\r\n\r\n// Check userId,email, mobile no\r\nexport const checkUserId = hostIp + `user/check`\r\nexport const checkUserMobile = hostIp + `user/check`\r\nexport const checkUserEmail = hostIp + `user/check`\r\n\r\n//Logout\r\nexport const logoutUser = hostIp + `user/logout`;\r\n\r\n// confirm Api Simplied Single\r\nexport const confirmApi = hostIp + `ekyc/simplified`;\r\n\r\n//e-kyc api\r\nexport const ekycWithFilter = hostIp + `ekyc/get/`;\r\nexport const ekycFullProfile = hostIp + `ekyc/full/get`;\r\nexport const ekycForUser = hostIp + `ekyc/user/get/`;\r\n//API for JOINT Account\r\nexport const simplifiedJointAPI = hostIp + `ekyc/simplified/joint`;\r\nexport const simplifiedJointAddAPI = hostIp + `ekyc/simplified/joint/add`;\r\nexport const simplifiedJointConfirmAPI = hostIp + `ekyc/simplified/joint/confirm`;\r\n\r\n// API for Regular Single Account\r\nexport const regularSingleApi = hostIp + `ekyc/regular`;\r\n\r\n// product Api \r\nexport const createProduct = hostIp + `product`;\r\nexport const deleteProduct = hostIp + `product`;\r\nexport const getProduct = hostIp + `product/get`;\r\nexport const getProductMultiFilter = hostIp + 'product/get/search';\r\n\r\n\r\n// Transaction Profile\r\nexport const createTPAPI = hostIp + `tp`;\r\nexport const getTPAPI = hostIp + `tp/get`;\r\nexport const updateTPAPI = hostIp + `tp`;\r\nexport const deleteTPAPI = hostIp + `tp`;\r\n\r\n// Get Ekyc Type BY TP\r\nexport const getEkycType = hostIp + `tp/ekyc-type`;\r\n\r\n// Download\r\n\r\nexport const profileDownload = hostIp + `report/ekyc/simplified/pdf`;\r\nexport const opFileDownload = hostIp + `ekyc/regular/get/additional-files`;\r\nexport const regPdfDownload = hostIp + `report/ekyc/regular/pdf`;\r\n\r\n\r\n//Role Management\r\nexport const createRole = hostIp + `role/`;\r\nexport const getRoleWithStatus = hostIp + `role/get/`;\r\nexport const roleApproval = hostIp + `role/status`;\r\nexport const updateRole = hostIp + `role`;\r\n\r\n\r\n// Personal dETAILS ADDRESS, Profession\r\nexport const profession = hostIp + `address/get/profession`;\r\nexport const division = hostIp + `address/get/division`;\r\nexport const district = hostIp + `address/get/district`;\r\nexport const union = hostIp + `address/get/union`;\r\nexport const upozila = hostIp + `address/get/upazila`;\r\n\r\n// Simplified ekyc search conversion\r\nexport const simConvReg = hostIp + `ekyc/simplified/get`;\r\n\r\n// simReg conversion api\r\nexport const simRegApi = hostIp + `ekyc/regular/simplified-to-regular`;\r\n\r\n// MOBILE NUMBER VERIFICATION\r\nexport const mobileVerification = hostIp + `conval/mobile/send-otp`;\r\nexport const mobileCodeVerification = hostIp + `conval/mobile/verify`;\r\n\r\n//ABS ACCOUNT CHECK\r\nexport const absAccountCheck = hostIp + `integration/abs/account-check`;\r\n\r\n// Forget Password Verification\r\n\r\nexport const forgetPassUserId = hostIp + `user/forget-password`;\r\nexport const forgetPasswordVerifyCode = hostIp + `user/forget-password/verify`;\r\nexport const setPassword = hostIp + `user/forget-password/confirm`;\r\n\r\n\r\n// Account\r\nexport const pendingAccount = hostIp + `account/get/`;\r\nexport const discardAccount = hostIp + `account/discard`;\r\nexport const reopenAccount = hostIp + `account/reopen`;\r\n\r\n// Channle Account Number Search \r\nexport const channelAccountSearch = hostIp + `account/applicant/get`;\r\n\r\n// Access Log\r\nexport const accessLog = hostIp + `report/access-log/`;\r\n\r\n// Text match\r\nexport const textMatch = hostIp + `ai/text-match`;\r\n\r\n// Depository API\r\nexport const depoApi = hostIp + `depository/get`;\r\n\r\n//  Nid Verification\r\nexport const NidFingerVerification = hostIp + `nid-verification/fingerprint-verification`;\r\nexport const NidVerifyList = hostIp + `nid-verification/get/`;\r\n\r\n// Face Compare New\r\nexport const nidFaceCompareNew = hostIp + `nid-verification/face-verification`;\r\n\r\n// Translator api\r\nexport const translate = hostIp + `ai/translate`;\r\n\r\n// Native Get Division\r\n\r\nexport const getDivNative = hostIp + `address/get/abs/division`;\r\nexport const getDistNative = hostIp + `address/get/abs/district`;\r\nexport const getUpaNative = hostIp + `address/get/abs/upazila`;\r\nexport const getUniNative = hostIp + `address/get/abs/union`;\r\n\r\n","export const shortTime = 5000;\r\nexport const mediumTime = 10000;\r\nexport const largeTime = 500000;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = __webpack_public_path__ + \"static/media/wave2.a77bd97c.png\";"],"sourceRoot":""}