{"version":3,"sources":["component/Login/Login.js","component/E-KYC/Url/IpAdd.js","component/E-KYC/Url/ApiList.js","component/Login/image/wave2.png"],"names":["Joi","require","Login","state","userId","password","channelLogin","idleTimeSet","onChange","e","setState","target","name","value","handleChannelLogin","onSubmit","a","preventDefault","obj","joiObj","schema","validateAsync","axios","post","loginAPI","userLogin","loginSuccess","data","branchCode","branchOrAgentPointCode","branchName","branchOrAgentPointName","codeChannel","channelCode","sessionStorage","setItem","JSON","stringify","loginToken","props","history","replace","token","authToken","features","sessionTimeOut","NotificationManager","success","console","log","response","errorMessage","reason","warning","request","error","toString","screenWidth","window","screen","width","screenHeight","height","authVal","config","headers","key","getAppSetting","idleUse","this","parseInt","message","className","src","bg","alt","id","type","placeholder","autoComplete","checked","defaultChecked","to","Component","object","string","min","max","required","withRouter","hostIp","nidValidationRPA","faceValidate","fingerValidate","nidOcr","initAppSetting","updateAppSetting","allDataCount","ekycPie","lineChart","lineChartVerify","zoneCodeConversion","getRoleWithFilter","createUserWithRole","getUserWithStatus","userApprovalAPI","getAllUser","searchUser","getupdateUser","userUpdate","userDeleteAPI","twoFALogin","changePassword","getProfile","imageUpdate","dataUpdate","checkUserId","checkUserMobile","checkUserEmail","logoutUser","confirmApi","ekycWithFilter","ekycFullProfile","ekycForUser","simplifiedJointAPI","simplifiedJointAddAPI","simplifiedJointConfirmAPI","regularSingleApi","createProduct","deleteProduct","getProduct","getProductMultiFilter","createTPAPI","getTPAPI","updateTPAPI","deleteTPAPI","getEkycType","profileDownload","opFileDownload","regPdfDownload","createRole","getRoleWithStatus","roleApproval","updateRole","profession","division","district","union","upozila","simConvReg","simRegApi","mobileVerification","mobileCodeVerification","absAccountCheck","forgetPassUserId","forgetPasswordVerifyCode","setPassword","pendingAccount","discardAccount","reopenAccount","channelAccountSearch","accessLog","textMatch","depoApi","NidFingerVerification","NidVerifyList","nidFaceCompareNew","translate","getDivNative","getDistNative","getUpaNative","getUniNative","module","exports"],"mappings":"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","file":"static/js/11.60748aa0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//import { connect } from 'react-redux';\r\n\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport './Login.css'\r\nimport bg from './image/wave2.png'\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { loginAPI, getAppSetting } from '../E-KYC/Url/ApiList';\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\n\r\n\r\nconst Joi = require('@hapi/joi');\r\n\r\n//import Dashboard from '../Dashboard/Dashboard';\r\n//=====Redux work above\r\n//import { loginRequest, loginSuccess } from '../../actions/loginAction';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        userId: '',\r\n        password: '',\r\n        channelLogin: false,\r\n        idleTimeSet: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        let screenWidth = window.screen.width;\r\n        let screenHeight = window.screen.height;\r\n\r\n        if (screenWidth <= 1366 && screenHeight <= 768) {\r\n            NotificationManager.warning(\"Please make sure Browser zoom 75 - 80 % for optimum User Experience\", \"Click to Remove\", 50000000);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    handleChannelLogin = e => {\r\n        //const { channelLogin } = e.target\r\n        this.setState({\r\n            channelLogin: !this.state.channelLogin\r\n        })\r\n        // console.log(\"Channel Status in func\", this.state.channelLogin)\r\n\r\n    }\r\n\r\n    // FOR IDLE TIMEOUT//////////////\r\n    async sessionTimeOut(authVal) {\r\n        let config = {\r\n            headers: {\r\n                \"x-auth-token\": authVal,\r\n            },\r\n        };\r\n        const obj = {\r\n            key: \"USER_IDLE_TIMEOUT\"\r\n        }\r\n        try {\r\n            let idleUse = await axios.post(getAppSetting, obj, config);\r\n            // console.log(idleUse.data.data[0].value);\r\n            this.setState({ idleTimeSet: parseInt(idleUse.data.data[0].value) });\r\n            sessionStorage.setItem('idleTimeout', JSON.stringify(parseInt(idleUse.data.data[0].value)));\r\n\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                let message = error.response.data.message\r\n                NotificationManager.error(message, \"Error\", 5000);\r\n            } else if (error.request) {\r\n                NotificationManager.error(\"Error Connecting...\", \"Error\", 5000);\r\n            } else if (error) {\r\n                NotificationManager.error(error.toString(), \"Error\", 5000);\r\n            }\r\n        }\r\n    }\r\n    // FOR IDLE TIMEOUT//////////////\r\n\r\n\r\n    onSubmit = async (e) => {\r\n        const { userId, password, channelLogin } = this.state\r\n        e.preventDefault();\r\n        const obj = {\r\n            userId,\r\n            password,\r\n            channelLogin\r\n        }\r\n        const joiObj = {\r\n            userId,\r\n            password\r\n        }\r\n        // console.log(\"loginObj\", obj);\r\n\r\n        //this.schema.validate(obj)\r\n\r\n\r\n        try {\r\n\r\n            const validationValue = await schema.validateAsync(joiObj);\r\n            // console.log(\"validationValue\", validationValue)\r\n            let userLogin = await axios.post(loginAPI, obj);\r\n            // console.log(\"loginapi \", userLogin.data);\r\n\r\n            let loginSuccess = userLogin.data.data;\r\n            //console.log(\"login\", loginSuccess.branchOrAgentPointCode);\r\n            let branchCode = loginSuccess.branchOrAgentPointCode;\r\n            let branchName = loginSuccess.branchOrAgentPointName;\r\n            let codeChannel = loginSuccess.channelCode;\r\n            sessionStorage.setItem('branchOrAgentPointCode', JSON.stringify(branchCode));\r\n            sessionStorage.setItem('branchOrAgentPointName', JSON.stringify(branchName));\r\n            sessionStorage.setItem('ChannelCode', JSON.stringify(codeChannel));\r\n\r\n\r\n            if (loginSuccess.loginToken) {\r\n                let loginToken = loginSuccess.loginToken;\r\n                this.props.history.replace('/verify-login', loginToken);\r\n            } else {\r\n\r\n                let token = loginSuccess.authToken;\r\n                let features = loginSuccess.features;\r\n\r\n                // ----------------------idleTimeout===================\r\n                await this.sessionTimeOut(token);\r\n                // ----------------------idleTimeout===================\r\n\r\n                //Session Storage\r\n                sessionStorage.setItem('x-auth-token', JSON.stringify(token));\r\n                sessionStorage.setItem('featureList', JSON.stringify(features));\r\n                //   console.log(\"token\", token);\r\n\r\n                let message = \"Login Successfull\";\r\n                //alert(statusCode + ' ' + message);\r\n                NotificationManager.success(message, \"Success\", 5000);\r\n                this.props.history.replace('/dashboard');\r\n            }\r\n\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n\r\n            if (err.response) {\r\n                let errorMessage = err.response.data.reason;\r\n                NotificationManager.warning(errorMessage, \"Error\", 5000);\r\n                this.setState({\r\n                    userId: '',\r\n                    password: '',\r\n                    channelLogin: false\r\n\r\n                });\r\n\r\n            } else if (err.request) {\r\n                NotificationManager.error(\"Error Connecting...\", \"Error\", 5000);\r\n                this.setState({\r\n                    userId: '',\r\n                    password: '',\r\n                    channelLogin: false\r\n\r\n                });\r\n            } else if (err) {\r\n                NotificationManager.error(err.toString(), \"Error\", 5000);\r\n                this.setState({\r\n                    userId: '',\r\n                    password: '',\r\n                    channelLogin: false\r\n\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        //============================= \r\n        //Redux work\r\n        // this.props.onSubmit(obj)\r\n        //=============================\r\n        //this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"channelLogin Render\", this.state.channelLogin);\r\n        return (\r\n            <div>\r\n                <img className=\"wave\" src={bg} alt=\"\" />\r\n                <div id=\"container\">\r\n\r\n                    <div className=\"login-content\">\r\n                        <form id=\"loginForm\" onSubmit={this.onSubmit}>\r\n\r\n                            {/* <img id=\"proImg\" src={logo} /> */}\r\n                            <div className=\"loginDivBg pt-2\"><h1>E-KYC</h1></div>\r\n                            <h2 className=\"heading mb-5\">Login</h2>\r\n                            {/* <div className=\"input-div one\">\r\n                                <div className=\"i\">\r\n                                    <i className=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div id=\"user\">\r\n                                    <h5>Username</h5>\r\n                                    <input name=\"userId\" value={this.state.userId} onChange={this.onChange} type=\"text\" id=\"inputUser\" placeholder=\"User ID\" autoComplete=\"off\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input-div pass\">\r\n                                <div className=\"i\">\r\n                                    <i className=\"fas fa-lock\"></i>\r\n                                </div>\r\n                                <div id=\"passwd\">\r\n                                    <h5>Password</h5>\r\n                                    <input name=\"password\" value={this.state.password} onChange={this.onChange} type=\"password\" id=\"inputPass\" placeholder=\"Password\" />\r\n                                </div>\r\n                            </div> */}\r\n\r\n\r\n                            <div className=\"field mb-3\">\r\n                                <input name=\"userId\" value={this.state.userId} onChange={this.onChange} type=\"text\" id=\"inputUser\" placeholder=\"User ID\" autoComplete=\"off\" />\r\n                                <span>\r\n                                    <FaUser />\r\n                                </span>\r\n\r\n                                <label>User ID</label>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <input name=\"password\" value={this.state.password} onChange={this.onChange} type=\"password\" id=\"inputPass\" placeholder=\"Password\" />\r\n                                <span>\r\n                                    <FaLock />\r\n                                </span>\r\n                                <label>Password</label>\r\n                            </div>\r\n\r\n                            <div id=\"channelLogin\" className='d-flex align-items-center'>\r\n                                <input type=\"checkbox\" checked={this.state.channelLogin} onChange={e => this.handleChannelLogin(e)} defaultChecked={this.state.channelLogin} /> &nbsp;\r\n                            <label id=\"channelLabel\">Channel Login</label>\r\n                            </div>\r\n\r\n                            <div className=\"mt-2\">\r\n                                <Link to=\"/verify-id\" id=\"forgetPass\" >Forgot Password?</Link>\r\n                            </div>\r\n\r\n                            <input type=\"submit\" className=\"neoBtn\" value=\"Login\" />\r\n                            {/* <button type=\"submit\" className=\"neoBtn\">Login</button> */}\r\n                            {/* <Link to=\"/dashboard\" id=\"btn\" >Login</Link> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst schema = Joi.object({\r\n    userId: Joi.string().min(1).max(50).required(),\r\n    password: Joi.string().min(1).max(50).required(),\r\n\r\n})\r\n//Redux work Above===================================\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         onSubmit: (p) => {\r\n//             dispatch(loginSuccess(p));\r\n//         }\r\n//     }\r\n// }\r\n\r\n// // export default withRouter(newLogin)\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps)(withRouter(Login));\r\n//Redux work ===================================\r\n\r\nexport default withRouter(Login);","export const hostIp = `http://103.17.69.111/api/`;\r\n// export const hostIp = `http://10.88.7.12:3001`;\r\n// export const hostIp = `http://127.0.0.1:3001/`;\r\n// export const hostIp = `http://10.88.1.169:3001/`;\r\n//  export const hostIp = `https://agent1.bankasia-bd.com:3000/api/`;\r\n","import { hostIp } from './IpAdd';\r\n\r\n// RPA\r\nexport const nidValidationRPA = hostIp + `ai/nid-rpa`;\r\n// export const nidValidationRPA = hostIp + `dummy/nid-rpa`;\r\n\r\n// face Verification\r\n\r\nexport const faceValidate = hostIp + `ai/face-verification`;\r\n// export const faceValidate = hostIp + `dummy/face-verification`;\r\n\r\n// Finger Verification\r\n\r\nexport const fingerValidate = hostIp + `integration/fingerprint-verification`;\r\n// export const fingerValidate = hostIp + `dummy/fingerprint-verification`;\r\n\r\n\r\n// OCR\r\nexport const nidOcr = hostIp + `ai/nid-ocr`;\r\n\r\n// App Setting\r\n\r\nexport const getAppSetting = hostIp + `setting/get`;\r\nexport const initAppSetting = hostIp + `setting/init`;\r\nexport const updateAppSetting = hostIp + `setting/`;\r\n\r\n// Chart Data\r\n\r\nexport const allDataCount = hostIp + `report/count`;\r\nexport const ekycPie = hostIp + `report/ekyc/count`;\r\nexport const lineChart = hostIp + `report/ekyc/count/by/month`;\r\nexport const lineChartVerify = hostIp + `report/verification/count/by/day`;\r\n\r\n// zonecode-conversion\r\nexport const zoneCodeConversion = hostIp + `integration/zonecode-conversion`;\r\n\r\n//User Management\r\nexport const getRoleWithFilter = hostIp + `role/get/`;\r\nexport const createUserWithRole = hostIp + `user`;\r\nexport const getUserWithStatus = hostIp + `user/get/`;\r\nexport const userApprovalAPI = hostIp + `user/status`;\r\nexport const getAllUser = hostIp + `user/get/`;\r\nexport const searchUser = hostIp + `user/get/`;\r\nexport const getupdateUser = hostIp + `user/get/`;\r\nexport const userUpdate = hostIp + `user/`;\r\nexport const userDeleteAPI = hostIp + `user/status`;\r\n//Login\r\nexport const loginAPI = hostIp + `user/login`;\r\n\r\n//2FA Login\r\nexport const twoFALogin = hostIp + `user/2fa`;\r\n\r\n//Profile Management\r\nexport const changePassword = hostIp + `profile/change-password`;\r\nexport const getProfile = hostIp + `profile/`;\r\nexport const imageUpdate = hostIp + `profile/picture`;\r\nexport const dataUpdate = hostIp + `profile/`;\r\n\r\n\r\n\r\n\r\n// Check userId,email, mobile no\r\nexport const checkUserId = hostIp + `user/check`\r\nexport const checkUserMobile = hostIp + `user/check`\r\nexport const checkUserEmail = hostIp + `user/check`\r\n\r\n//Logout\r\nexport const logoutUser = hostIp + `user/logout`;\r\n\r\n// confirm Api Simplied Single\r\nexport const confirmApi = hostIp + `ekyc/simplified`;\r\n\r\n//e-kyc api\r\nexport const ekycWithFilter = hostIp + `ekyc/get/`;\r\nexport const ekycFullProfile = hostIp + `ekyc/full/get`;\r\nexport const ekycForUser = hostIp + `ekyc/user/get/`;\r\n//API for JOINT Account\r\nexport const simplifiedJointAPI = hostIp + `ekyc/simplified/joint`;\r\nexport const simplifiedJointAddAPI = hostIp + `ekyc/simplified/joint/add`;\r\nexport const simplifiedJointConfirmAPI = hostIp + `ekyc/simplified/joint/confirm`;\r\n\r\n// API for Regular Single Account\r\nexport const regularSingleApi = hostIp + `ekyc/regular`;\r\n\r\n// product Api \r\nexport const createProduct = hostIp + `product`;\r\nexport const deleteProduct = hostIp + `product`;\r\nexport const getProduct = hostIp + `product/get`;\r\nexport const getProductMultiFilter = hostIp + 'product/get/search';\r\n\r\n\r\n// Transaction Profile\r\nexport const createTPAPI = hostIp + `tp`;\r\nexport const getTPAPI = hostIp + `tp/get`;\r\nexport const updateTPAPI = hostIp + `tp`;\r\nexport const deleteTPAPI = hostIp + `tp`;\r\n\r\n// Get Ekyc Type BY TP\r\nexport const getEkycType = hostIp + `tp/ekyc-type`;\r\n\r\n// Download\r\n\r\nexport const profileDownload = hostIp + `report/ekyc/simplified/pdf`;\r\nexport const opFileDownload = hostIp + `ekyc/regular/get/additional-files`;\r\nexport const regPdfDownload = hostIp + `report/ekyc/regular/pdf`;\r\n\r\n\r\n//Role Management\r\nexport const createRole = hostIp + `role/`;\r\nexport const getRoleWithStatus = hostIp + `role/get/`;\r\nexport const roleApproval = hostIp + `role/status`;\r\nexport const updateRole = hostIp + `role`;\r\n\r\n\r\n// Personal dETAILS ADDRESS, Profession\r\nexport const profession = hostIp + `address/get/profession`;\r\nexport const division = hostIp + `address/get/division`;\r\nexport const district = hostIp + `address/get/district`;\r\nexport const union = hostIp + `address/get/union`;\r\nexport const upozila = hostIp + `address/get/upazila`;\r\n\r\n// Simplified ekyc search conversion\r\nexport const simConvReg = hostIp + `ekyc/simplified/get`;\r\n\r\n// simReg conversion api\r\nexport const simRegApi = hostIp + `ekyc/regular/simplified-to-regular`;\r\n\r\n// MOBILE NUMBER VERIFICATION\r\nexport const mobileVerification = hostIp + `conval/mobile/send-otp`;\r\nexport const mobileCodeVerification = hostIp + `conval/mobile/verify`;\r\n\r\n//ABS ACCOUNT CHECK\r\nexport const absAccountCheck = hostIp + `integration/abs/account-check`;\r\n\r\n// Forget Password Verification\r\n\r\nexport const forgetPassUserId = hostIp + `user/forget-password`;\r\nexport const forgetPasswordVerifyCode = hostIp + `user/forget-password/verify`;\r\nexport const setPassword = hostIp + `user/forget-password/confirm`;\r\n\r\n\r\n// Account\r\nexport const pendingAccount = hostIp + `account/get/`;\r\nexport const discardAccount = hostIp + `account/discard`;\r\nexport const reopenAccount = hostIp + `account/reopen`;\r\n\r\n// Channle Account Number Search \r\nexport const channelAccountSearch = hostIp + `account/applicant/get`;\r\n\r\n// Access Log\r\nexport const accessLog = hostIp + `report/access-log/`;\r\n\r\n// Text match\r\nexport const textMatch = hostIp + `ai/text-match`;\r\n\r\n// Depository API\r\nexport const depoApi = hostIp + `depository/get`;\r\n\r\n//  Nid Verification\r\nexport const NidFingerVerification = hostIp + `nid-verification/fingerprint-verification`;\r\nexport const NidVerifyList = hostIp + `nid-verification/get/`;\r\n\r\n// Face Compare New\r\nexport const nidFaceCompareNew = hostIp + `nid-verification/face-verification`;\r\n\r\n// Translator api\r\nexport const translate = hostIp + `ai/translate`;\r\n\r\n// Native Get Division\r\n\r\nexport const getDivNative = hostIp + `address/get/abs/division`;\r\nexport const getDistNative = hostIp + `address/get/abs/district`;\r\nexport const getUpaNative = hostIp + `address/get/abs/upazila`;\r\nexport const getUniNative = hostIp + `address/get/abs/union`;\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/wave2.a77bd97c.png\";"],"sourceRoot":""}